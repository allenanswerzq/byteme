#!/usr/bin/env bash

info() {
  printf "\e[1;36m$*\e[m\n"
}

pass() {
  printf "\e[1;32m$*\e[m\n"
}

warning() {
  printf "\e[1;33m$*\e[m\n"
}

error() {
  printf "\e[1;31m$*\e[m\n"
}

error_wln() {
  printf "\e[1;31m$*\e[m"
}

print_header() {
  echo "//--------------------------------------------{$*}-----//"
}

print_banner() {
  echo "----------------------------------------------{$*}---"
}

print_stdout() {
  local chars=$(cat $1 | wc -c)
  local raw=$(cat $1 | sed 's/    / /g')
  # if [[ chars -ge 1000 ]]; then
  #   raw="$(head -c 1000 $1)......(too long ignored)......"
  # fi
  echo "$raw"
}

print_compare_diff() {
  local inp=$1
  local out="${inp%.inp}".out
  local rel="${inp%.inp}".cmp
  echo "Input: "
  print_stdout "$i"
  print_banner "diff"
  diff -y -W 60 "$out" "$rel" || true
  out="$rel"
  mv "$out" "$out".cmp.bak
  mv "$inp" "$inp".cmp.bak
  # TODO(zq7): maybe save sample tests here.
  rm -f *.rel *.inp *.out *.cmp *.gv
  cp "$out".cmp.bak 0.rel
  cp "$inp".cmp.bak 0.inp
  cp "$inp".cmp.bak $(basename $PWD).in
  rm -f *.bak
}

timeout="timeout"
if [[ `uname` == Darwin ]]; then timeout="gtimeout"; fi

TIME_LIMITS=5

trap_ctrlc () {
  if [[ -f std_err ]]; then
    print_stdout std_err
  fi
  error "Timeout after runnig for ($TIME_LIMITS)s, loop might exist."
  exit 1
}

cnt=1
trap_repl () {
  error "Caught ctrlc $cnt"
  test $cnt -ge 10 && exit 124
  cnt=$(expr $cnt + 1)
}
