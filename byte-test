#!/usr/bin/env bash

# set -xep

CURRENT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
source "$CURRENT_DIR/byte-com"

elf=$1
cnt=$2
with_compare=$3
sync1=`mktemp`
sync2=`mktemp`

run_test() {
  cmd=""$timeout" -s2 "$TIME_LIMITS" ./"$elf"_ge > $i.gg 2>run_err"
  if ! { bash -c "$cmd"; }; then
    ( flock -x 2
      if [[ -f "$sync1" ]]; then
        error "\n\\\\\\--------Generating error(TLE or other issues): $1------//"
        rm -f "$sync2"
        exit 1
      fi
    ) 2>stderr
    exit 1
  fi
  #------------------------------------------------------------------------
  cmd=""$timeout" -s2 "$TIME_LIMITS" ./"$elf" < $1.gg > $1.ga 2>run_err"
  if ! { bash -c "$cmd"; }; then
    ( flock -x 2
      if [[ -f "$sync1" ]]; then
        error "\n\\\\\\-----------Running error(TLE or other issues): $1----//"
        cat run_err
        error "\n--------------------------------------------------------------"
        flock -x $elf.in 1>&2 2>/dev/null
        echo " " >> $elf.in
        cat $1.gg | tee -a $elf.in
        echo " " >> $elf.in
        flock -u $elf.in 1>&2 2>/dev/null
        error "\n\\\\\\-----------------------------------------------------//\n"
        rm -f "$sync2"
        exit 1
      fi
    ) 2>stderr
    exit 1
  fi
  #---------------------------------------------------------------------
  if [[ "$with_compare" == "1" ]]; then
    cmd="./"$elf"_mp < $1.gg > $1.gb 2>compare_error"
    if ! { bash -c "$cmd"; }; then
      ( flock -x 2
        if [[ -f "$sync1" ]]; then
          error "\n------------------Comparing error: $1------------------------\n"
          cat compare_error
          error "\n----------------------------------------------------------\n"
          rm -f "$sync2"
          exit 1
        fi
      ) 2>stderr
      exit 1
    fi
    if [[ ! -f "$1.ga" || ! -f "$1.gb" ]]; then
      ( flock -x 2
        if [[ -f "$sync1" ]]; then
          error "\n\\\\------------No file generated to diff-------------------//\n"
          rm -f "$sync2"
          exit 1
        fi
      ) 2>stderr
      exit 1
    fi
    if ! diff -y -W 60 "$1.ga" "$1.gb" 2>&1 >/dev/null; then
      # NOTE: use flock to sync subprocess.
      ( flock -x 2
        if [[ -f "$sync1" ]]; then
          error "\n\\\\\\-------------------Comparing result $1----------------------//"
          diff -y -W 60 "$1.ga" "$1.gb"
          error "---------------------------------------------------------------"
          flock -x $elf.in 1>&2 2>/dev/null
          echo "Input" >> $elf.in
          cat $1.gg | tee -a $elf.in
          echo "Output" >> $elf.in
          cat $1.gb | tee -a $elf.in
          flock -u $elf.in 1>&2 2>/dev/null
          error "\n\\\\\\---------------------------------------------------------//\n"
          rm -f "$sync2"
          exit 1
        fi
      ) 2>stderr
      exit 1
    fi
  fi
  ( flock -x 2
    printf "test...$1 \e[1;32m\\t\\t\\t PASS\e[m\n"
  ) 2>stderr
}

trap cleanup 1 2 3 6 9

cleanup() {
  rm -f "$sync1"
  wait
  rm -f *.gg *.ga *.gb compare_error run_err stderr
  exit 1
}

rm -f *.gg *.ga *.gb compare_error run_err stderr
for i in $(seq 1 "$cnt"); do
  (run_test $i) &

  if (( $i % 4 == 0 )); then wait; fi

  if [[ ! -f "$sync2" ]]; then
    kill -SIGINT $$
  fi
done
rm -f *.gg *.ga *.gb compare_error run_err stderr
