#include <bits/stdc++.h>
#include "generator.h"
using namespace std;
#define x first
#define y second
#define mt make_tuple
#define all(x) (x).begin(), (x).end()
typedef long long ll;

int xy = -1;

template <class T>
void WriteFile(const T& val) {
  if (xy == -1) return;
  string data;
  if (!is_same<T, string>::value) {
    data = to_string(val);
  }
  ofstream ofs(to_string(xy) + ".gb");
  if (!ofs.is_open()) {
    assertm(0, "File cant open!");
    exit(1);
  }
  ofs << data << '\n';
  ofs.close();
}

//------------------Define input-------------------
int n;

//-------------------Generate-----------------------
void Generate() {
  n = rnd.next(1, 100);
}

//---------------------Format output----------------
void Output() {
  puts(n);
}

//---------------------Run If----------------------
void Run() {
  vector<int> best(3);
  // for (int n = 1; n <= 1000; n++) {
  ll ans = 0;
  for (int i = 1; i <= n; i++) {
    for (int j = 1; j <= n; j++) {
      for (int k = 1; k <= n; k++) {
        ll x = i * j / __gcd(i, j);
        ll y = k * x / __gcd((ll) k, x);
        if (y > ans) {
          ans = y;
          best[0] = i;
          best[1] = j;
          best[2] = k;
        }
      }
    }
  }
  trace(n, ans, best);
  WriteFile(ans);
  // }
}

int main(int argc, char** argv) {
  if (argc == 2) {
    // Let's say we might want to write out a file for comparison.
    xy = atoi(argv[1]);
  }
  Generate();
  Output();
  Run();
  return 0;
}
