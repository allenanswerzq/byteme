#include <bits/stdc++.h>
#include "array.h"
#include "rnds.h"
#include "graph.h"
using namespace std;
#define x first
#define y second
#define mt make_tuple
#define all(x) (x).begin(), (x).end()
typedef long long ll;

int xy = -1;

void WriteFile(const string& data) {
  if (xy == -1) return;
  ofstream ofs(to_string(xy) + ".gb");
  if (!ofs.is_open()) {
    assertm(0, "File cant open!");
    exit(1);
  }
  ofs << data << '\n';
  ofs.close();
}

// Write your own test generating code here.
void Generate() {
  auto n = rnd.next(1, 12);
  auto a = Array::random(n, 1, 10);
  puts(n);
  // puts(a);
  trace(a);
  vector<vector<int>> ans(n, vector<int>(n));
  for (int i = 0; i < n; i++) {
    for (int j = 0; j < n; j++) {
      if (i == j) {
        ans[i][j] = -1;
      }
      else {
        ans[i][j] = a[i] & a[j];
      }
    }
  }
  for (int i = 0; i < n; i++) {
    for (int j = 0; j < n; j++) {
      cout << ans[i][j] << (j == n - 1 ? '\n' : ' ');
    }
  }
}

int main(int argc, char** argv) {
  if (argc == 2) {
    // Let's say we might want to write out a file for comparison.
    xy = atoi(argv[1]);
  }
  Generate();
  return 0;
}
