#include <bits/stdc++.h>
#include "array.h"
#include "rnds.h"
#include "graph.h"
using namespace std;
typedef long long ll;

template<class T> void puts(T t) { cout << t << "\n"; }
template<class T, class U, class... G>
void puts(T t, U u, G... g) { cout << t << " "; puts(u, g...); }

string go() {
  string x = rnd.next("[<0-9>]{2,4}");
  int n = x.size();
  assert(n >= 2);
  int i = rnd.next(0, n - 2);
  x.insert(i, "<");
  assert(x[i] == '<');
  n = x.size();
  assert(i + 1 <= n - 1);
  int j = rnd.next(i + 1, n - 1);
  assert(j > i && j <= n - 1);
  x.insert(j, "3");
  trace(x);
  return x;
}

void gen() {
  // Write your own test generating code here.
  int n = rnd.next(1, 50);
  puts(n);
  string ans = go();
  for (int i = 0; i < n; i++) {
    // string x = rnd.next("[a-z]{1, 10}");
    string x = rnd.next("[a-z]{1,10}");
    puts(x);
    ans += x;
    int t = rnd.next(0, 10);
    for (int i = 0; i < t; i++) {
      ans += go();
    }
  }
  int na = ans.size();
  assert(na >= 1);
  int x = rnd.next(0, na - 1);
  ans.insert(x, "<<<<");
  puts(ans);
}

int main() {
  gen();
  return 0;
}
